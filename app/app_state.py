import logging
import threading

logger = logging.getLogger(__name__)

class AppState:
    def __init__(self):
        self.cache = None
        self.model = None
        self.executor = None
        self.embedding_service = None
        self.initialized = False
        self.lock = threading.Lock()

    def initialize(self):
        """Inicializa todos los componentes de la aplicaci√≥n"""
        with self.lock:
            if self.initialized:
                return
                
            try:
                logger.info("üöÄ Inicializando estado de la aplicaci√≥n...")
                
                # ... [c√≥digo de inicializaci√≥n existente] ...
                
                # Marcar como inicializado al final
                self.initialized = True
                logger.info("‚úÖ Estado de la aplicaci√≥n inicializado")
            except Exception as e:
                logger.critical(f"Error inicializando estado: {str(e)}", exc_info=True)
                if self.executor:
                    self.executor.shutdown(wait=False)
                raise RuntimeError(f"Fallo en inicializaci√≥n: {str(e)}")

app_state = AppState()